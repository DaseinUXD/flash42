<DOMDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" backgroundColor="#666666" gridColor="#C0C0C0" guidesColor="#00FF00" width="540" height="480" currentTimeline="1" xflVersion="2.2" creatorInfo="Adobe Flash Professional CS6" platform="Windows" versionInfo="Saved by Adobe Flash Windows 12.0 build 537" majorVersion="12" buildNumber="537" gridSpacingX="18" gridSpacingY="18" snapAlignBorderSpacing="18" breakPointCount="1" viewAngle3D="56.7903237506823" nextSceneIdentifier="12" playOptionsPlayLoop="false" playOptionsPlayPages="false" playOptionsPlayFrameActions="false" autoSaveEnabled="true" autoSaveHasPrompted="true">
     <folders>
          <DOMFolderItem name="Component Assets" itemID="44e488a0-000016d6"/>
          <DOMFolderItem name="Component Assets/_private" itemID="4573a4bc-000003c6"/>
          <DOMFolderItem name="Component Assets/RadioButtonSkins" itemID="44c91485-00000122"/>
          <DOMFolderItem name="Component Assets/Shared" itemID="44f892ff-0000001e"/>
     </folders>
     <media>
          <DOMCompiledClipItem name="Component Assets/_private/ComponentShim" itemID="486bae12-000000d5" linkageExportForAS="true" linkageClassName="fl.core.ComponentShim" sourceLastImported="1215016466" displayAsComponent="false" customIconID="0" actionscriptClass="fl.core.ComponentShim" swfScmHRef="zip39iykly.swf" swfScmSourceFilename="C:\Documents and Settings\jkamerer\Local Settings\Application Data\Adobe\Flash CS4\en\Configuration\TMPxocvk3e0oz..swf" livePreviewScmHRef="zip39iykly1.swf" livePreviewScmSourceFilename="C:\Documents and Settings\jkamerer\Local Settings\Application Data\Adobe\Flash CS4\en\Configuration\TMPxocvk3e0oz..swf" persistLivePreview11="true" editFrameIndex="1" requiredMinimumPlayerVersion="0" requiredMinimumASVersion="0" parametersAreLocked="true" swcPath="Component Assets/_private/ComponentShim.xml" rootSymbolLinkageID="fl.core.ComponentShim" playerVersion="9" actionscriptVersion="3" hashKey="om7c9yCgvfkNSdG1wdk370">
               <classProperties><![CDATA[<component id="fl/core/ComponentShim" class="fl.core.ComponentShim" modified="1215016444492">
<movieBounds xmin="0" xmax="0" ymin="0" ymax="0" />
<classDefs>
	<classDef id="fl.controls.TextArea"/>
	<classDef id="fl.controls.BaseButton"/>
	<classDef id="fl.controls.ProgressBar"/>
	<classDef id="fl.controls.ButtonLabelPlacement"/>
	<classDef id="fl.controls.listClasses.CellRenderer"/>
	<classDef id="fl.data.SimpleCollectionItem"/>
	<classDef id="fl.events.ColorPickerEvent"/>
	<classDef id="fl.controls.Button"/>
	<classDef id="fl.controls.CheckBox"/>
	<classDef id="fl.controls.ColorPicker"/>
	<classDef id="fl.controls.listClasses.ListData"/>
	<classDef id="fl.events.DataGridEventReason"/>
	<classDef id="fl.data.TileListCollectionItem"/>
	<classDef id="fl.controls.Slider"/>
	<classDef id="fl.accessibility.ListAccImpl"/>
	<classDef id="fl.controls.TextInput"/>
	<classDef id="fl.controls.UIScrollBar"/>
	<classDef id="fl.controls.listClasses.ImageCell"/>
	<classDef id="fl.core.UIComponent"/>
	<classDef id="fl.controls.NumericStepper"/>
	<classDef id="fl.controls.progressBarClasses.IndeterminateBar"/>
	<classDef id="fl.controls.dataGridClasses.DataGridColumn"/>
	<classDef id="fl.events.DataChangeType"/>
	<classDef id="fl.events.ComponentEvent"/>
	<classDef id="fl.livepreview.LivePreviewParent"/>
	<classDef id="fl.accessibility.AccImpl"/>
	<classDef id="fl.controls.ProgressBarDirection"/>
	<classDef id="fl.core.ComponentShim"/>
	<classDef id="fl.managers.IFocusManagerGroup"/>
	<classDef id="fl.controls.listClasses.TileListData"/>
	<classDef id="fl.controls.ScrollPolicy"/>
	<classDef id="fl.controls.SelectableList"/>
	<classDef id="fl.controls.ProgressBarMode"/>
	<classDef id="fl.accessibility.DataGridAccImpl"/>
	<classDef id="fl.controls.dataGridClasses.DataGridCellEditor"/>
	<classDef id="fl.accessibility.CheckBoxAccImpl"/>
	<classDef id="fl.accessibility.LabelButtonAccImpl"/>
	<classDef id="fl.containers.UILoader"/>
	<classDef id="fl.controls.TileList"/>
	<classDef id="fl.controls.dataGridClasses.HeaderRenderer"/>
	<classDef id="fl.events.DataGridEvent"/>
	<classDef id="fl.controls.SliderDirection"/>
	<classDef id="fl.data.DataProvider"/>
	<classDef id="fl.controls.List"/>
	<classDef id="fl.controls.ScrollBar"/>
	<classDef id="fl.containers.ScrollPane"/>
	<classDef id="fl.events.SliderEvent"/>
	<classDef id="fl.controls.Label"/>
	<classDef id="fl.managers.FocusManager"/>
	<classDef id="fl.accessibility.ComboBoxAccImpl"/>
	<classDef id="fl.controls.RadioButton"/>
	<classDef id="fl.managers.IFocusManager"/>
	<classDef id="fl.containers.BaseScrollPane"/>
	<classDef id="fl.events.InteractionInputType"/>
	<classDef id="fl.managers.StyleManager"/>
	<classDef id="fl.controls.ScrollBarDirection"/>
	<classDef id="fl.accessibility.SelectableListAccImpl"/>
	<classDef id="fl.events.SliderEventClickTarget"/>
	<classDef id="fl.accessibility.ButtonAccImpl"/>
	<classDef id="fl.controls.ComboBox"/>
	<classDef id="fl.managers.IFocusManagerComponent"/>
	<classDef id="fl.events.ListEvent"/>
	<classDef id="fl.controls.DataGrid"/>
	<classDef id="fl.controls.listClasses.ICellRenderer"/>
	<classDef id="fl.accessibility.UIComponentAccImpl"/>
	<classDef id="fl.controls.RadioButtonGroup"/>
	<classDef id="fl.accessibility.RadioButtonAccImpl"/>
	<classDef id="fl.accessibility.TileListAccImpl"/>
	<classDef id="fl.controls.LabelButton"/>
	<classDef id="fl.core.AccessibilityShim"/>
	<classDef id="fl.events.DataChangeEvent"/>
	<classDef id="fl.events.ScrollEvent"/>
	<classDef id="fl.core.InvalidationType"/>
</classDefs>
<class id="fl.core.ComponentShim" >
</class></component>
]]></classProperties>
               <customIcon>
                    <CustomIcon rowByteCount="72" colorDepth="32" width="18" height="18" frameRight="360" frameBottom="360" isTransparent="true" href="zip39iykly2.dat"/>
               </customIcon>
               <SwcItem name="fl.core.ComponentShim" version="1215016444" isTopLevel="true"/>
          </DOMCompiledClipItem>
     </media>
     <symbols>
          <Include href="ButtonReset.xml" loadImmediate="false" itemID="4cebbaea-00000028" lastModified="1362104234"/>
          <Include href="ButtonUp.xml" loadImmediate="false" itemID="4c45e4f3-00000146" lastModified="1362104219"/>
          <Include href="Component Assets/_private/Component_avatar.xml" loadImmediate="false" itemID="44f89322-00000020" lastModified="1168286780"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_disabledIcon.xml" itemID="4399b23a-000082f3" lastModified="1168289721"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_downIcon.xml" itemID="4399b244-00008370" lastModified="1168289734"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_overIcon.xml" itemID="4399b24e-000083ed" lastModified="1168289743"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_selectedDisabledIcon.xml" itemID="44b1a5d8-00000135" lastModified="1168289768"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_selectedDownIcon.xml" itemID="44b1a5ee-00000136" lastModified="1168289828"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_selectedIcon.xml" loadImmediate="false" itemID="456df3ec-0000019d" lastModified="1168289833"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_selectedOverIcon.xml" itemID="44b1a612-00000137" lastModified="1168289876"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_selectedUpIcon.xml" itemID="44b1a624-00000138" lastModified="1168289887"/>
          <Include href="Component Assets/RadioButtonSkins/RadioButton_upIcon.xml" itemID="44b1a5bf-00000134" lastModified="1168289939"/>
          <Include href="Component Assets/Shared/focusRectSkin.xml" itemID="44d8b6f8-00000055" lastModified="1168290361"/>
          <Include href="flat blue play.xml" itemIcon="0" loadImmediate="false" itemID="4c6bd5a4-00000022" lastModified="1282135460"/>
          <Include href="RadioButton.xml" itemID="44b1a57a-00000122" lastModified="1215016478"/>
     </symbols>
     <timelines>
          <DOMTimeline name="Scene 1">
               <layers>
                    <DOMLayer name="actions" color="#9933CC" current="true" isSelected="true" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <Actionscript breakpoints="40">
                                        <script><![CDATA[/*
Flash CS4+ AS3 tutorial by Doug Ensley.

http://www.flashandmath.com/

Last modified: December 5, 2010
*/

/*The domino images used in our example were created by Jesse Fuchs and Tom Hart from free SVG images created by David Bellot, 
and are themselves available for use under a Creative Commons License.
********************

dominoDeal
*** adapted by Mark W. Matthews
*********************************/

// Load the custom classes for working with dominoes
import Domino;
import DominoLoader;

// Align buttons and make "deal button" visible 
btnRepeat.x = btnPull.x;
btnRepeat.y = btnPull.y;
btnPull.visible = false;
btnRepeat.visible = false;

txtOutput.wordWrap=true;
txtOutput.mouseEnabled=false;
txtOutput.text="Loading images. Please wait...";

/* 
Create a board that we can attach all objects to. This will allow us to move the effect easily to different parts of the stage, if desired.
*/
var board:Sprite = new Sprite();
board.x = 50;
board.y = 110;
addChild(board);

// Array to hold loaded dominoes and a separate array for the shuffled set:
var arrDominoes:Array = [ ];
var arrSet:Array = new Array(28);

// Variables for things that will need to be referenced in multiple functions:
var topDomino:Domino;
var dominoLdr:DominoLoader;  

// turnRadius is radius of the semicircular path followed by y and z coordinates of each domino when pulled.
var turnRadius:Number = 150;

// The domino will move in "turnSteps" many steps over a "turnTime" millisecond period.
var turnSteps:Number = 16;
var turnTime:Number = 400;

// Between dominoes pulled there is a slight pause of this many milliseconds:
var delayTime:Number = 200;

// A global variable counts the number of dominoes pulled so we know when to stop:
var numPulled:int = 0;

// Each domino will have the same perspective projection values set.
var pp:PerspectiveProjection = new PerspectiveProjection();
pp.fieldOfView=20;
pp.projectionCenter=new Point(0,0);

// The makeDominoes function sets up file names that correspond to the files in the "dominoes-50" subfolder located in the same folder as this fla source file.  
makeDominoes();

function makeDominoes():void {
	var arrSide0:Array = ["00","01","02","03","04","05","06","11","12","13","14","15","16","22","23","24","25","26","33","34","35","36","44","45","46","55","56","66"];
//	var arrSide1:Array = ["0","1","2","3","4","5","6"];
	var arrDominoStrings:Array = new Array(28);
	var i:int; //, j:int;
	
	// Fill arrDominoStrings with the 28 file names for the domino faces
/*	for (i=0; i<7; i++) {
		for (j=0; j<7; j++) {
			arrDominoStrings[7*i+j] = "dominoes-50/"+arrSide0[j]+arrSide1[i]+"-50.png";
		}
	}
*/
	for (i=0; i<28; i++) {
		arrDominoStrings[i] = "dominoes-50/"+arrSide0[i]+"-50.png";
	}
	
	/* 
	DominoLoader object is constructed with an array of file names of domino faces 
	and a single file name for the domino back
	*/
	dominoLdr = new DominoLoader(arrDominoStrings,"dominoes-50/txback-50.png");
	dominoLdr.addEventListener(DominoLoader.DOMINOES_LOADED, loadComplete);
	dominoLdr.addEventListener(DominoLoader.LOAD_ERROR, loadError);
}

// Called when all domino image files have completely loaded. Primarily calls the setupPile function, defined further below.
function loadComplete(e:Event):void {
	setupPile();
	
	btnPull.visible = true;
	
	dominoLdr.removeEventListener(DominoLoader.DOMINOES_LOADED, loadComplete);
	dominoLdr.removeEventListener(DominoLoader.LOAD_ERROR, loadError);
	
	txtOutput.text="";
	
	txtOutput.visible=false;
}

// Actions to take if there is a file error:
function loadError(e:Event):void {
	txtOutput.text="Error loading images. The server may be busy. Try refreshing the page.";
	dominoLdr.removeEventListener(DominoLoader.DOMINOES_LOADED, loadComplete);
	dominoLdr.removeEventListener(DominoLoader.LOAD_ERROR, loadError);
}

// Set up the pile of dominoes by "shuffling" the loaded dominoes
function setupPile():void {
	var i:int;
	var r:int;
	var dom:Domino;
	
	// Remove all current children of board
	while (board.numChildren>0) {
		board.removeChildAt(0);
	}
	
	// arrSet is initially empty. arrDominoes is initially the array of 
	//   Domino objects from the DominoLoader object dominoLdr
	arrSet = new Array(28);
	arrDominoes = (dominoLdr.getDominoArray()).concat();
	
	// Remove random dominoes from arrDominoes and place them on arrSet. 
	//   Each is set to be initially facedown.
	for (i=0; i<28; i++) {
		r = Math.floor(arrDominoes.length * Math.random());
		dom = arrDominoes.splice(r,1)[0] as Domino;
		
		dom.makeFaceDown();
		dom.transform.perspectiveProjection=pp;
		board.addChild(dom);
		
		// Position each domino
		dom.x = 0;
		dom.y = 0;
		dom.z = 0;
		
		arrSet[i] = dom;
	}
}

/* 
Timers for managing the animation. The first timer manages the turn, and the second timer provides a delay between dominos dealt.
*/
var tmTurn:Timer = new Timer(turnTime/turnSteps,turnSteps);
tmTurn.addEventListener(TimerEvent.TIMER, tmTurn_Move);
tmTurn.addEventListener(TimerEvent.TIMER_COMPLETE, tmTurn_Done);

var tmDelay:Timer = new Timer(delayTime,1);
tmDelay.addEventListener(TimerEvent.TIMER_COMPLETE, tmDelay_Done);

// This is the main function that handles all motion on each Timer "tick."
function tmTurn_Move(te:TimerEvent):void {
	// r is an angle (degrees) measure between 0 and 180, and ang is equivalent radian measure 
	var r:Number = tmTurn.currentCount/turnSteps*180;
	var ang:Number = r*Math.PI/180;
	
	// x coordinate moves in a line, y and z move in a sine-curve arc
	topDomino.x = (150+35*numPulled)*r/180;
	topDomino.y = turnRadius*Math.sin(ang);
	topDomino.z = -1.5*turnRadius*Math.sin(ang);
	
	// Rotate about the horizontal axis
	topDomino.rotateView(180-r,"horizontal");
}

// When the turning timer is finished, we start the delay timer, which has no TIMER handler because its job is to fire exactly once.
function tmTurn_Done(te:TimerEvent):void {
	/* Calling this method sets the topDomino to be truly "face up" so the 
	domino "knows" its own orientation for possible subsequent actions.
	*/
	topDomino.makeFaceUp();
	
	tmDelay.reset();
	tmDelay.start();
}

/* When the delay timer is finished (firing exactly once), 
we set up for the next domino to be dealt until there are five. */

function tmDelay_Done(te:TimerEvent):void {
	
	if (numPulled < 7) {
		
		numPulled++;
		
		/* Remove new top domino from arrSet and ensure the topDomino is above 
		(in the display list) all else on the board. */
		topDomino = arrSet.splice(arrSet.length - 1,1)[0];
		board.setChildIndex(topDomino,board.numChildren-1);
		
		// Start the turning timer
		tmTurn.reset();
		tmTurn.start();
	}
	else {
		// Show the "Shuffle" button once all 7 dominoes are pulled.
		btnRepeat.visible = true;
	}
}

// Handler for a click on the "Deal 5" button
btnPull.addEventListener(MouseEvent.CLICK, dealUp);

function dealUp(me:MouseEvent):void {
	btnPull.visible = false;
	numPulled++;

	/* Remove new top domino from arrSet and ensure the topDomino is above 
	(in the display list) all else on the board. */
	topDomino = arrSet.splice(arrSet.length - 1,1)[0];	
	board.setChildIndex(topDomino,board.numChildren-1);
	
	// Start the turning timer
	tmTurn.reset();
	tmTurn.start();
}

btnRepeat.addEventListener(MouseEvent.CLICK, reset);

function reset(me:MouseEvent):void {
	numPulled = 0;
	setupPile();
	btnRepeat.visible = false;
	btnPull.visible = true;
}]]></script>
                                   </Actionscript>
                                   <elements/>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
                    <DOMLayer name="onStage" color="#4FFF4F" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <elements>
                                        <DOMShape>
                                             <strokes>
                                                  <StrokeStyle index="1">
                                                       <SolidStroke scaleMode="normal">
                                                            <fill>
                                                                 <SolidColor color="#FFFFFF"/>
                                                            </fill>
                                                       </SolidStroke>
                                                  </StrokeStyle>
                                             </strokes>
                                             <edges>
                                                  <Edge strokeStyle="1" edges="!261 676|9461 676!380 8992|10379 8992"/>
                                             </edges>
                                        </DOMShape>
                                        <DOMStaticText fontRenderingMode="bitmap" width="230.2" height="12.2" autoExpand="true" isSelectable="false">
                                             <matrix>
                                                  <Matrix d="1.0032958984375" tx="20" ty="455"/>
                                             </matrix>
                                             <textRuns>
                                                  <DOMTextRun>
                                                       <characters>AS3 and Flash CS4+ "How To" by Doug Ensley</characters>
                                                       <textAttrs>
                                                            <DOMTextAttrs size="11" bitmapSize="220" face="ArialMT" fillColor="#FFFFFF"/>
                                                       </textAttrs>
                                                  </DOMTextRun>
                                             </textRuns>
                                        </DOMStaticText>
                                        <DOMStaticText fontRenderingMode="bitmap" width="130.2" height="13.35" autoExpand="true" isSelectable="false">
                                             <matrix>
                                                  <Matrix tx="388" ty="455"/>
                                             </matrix>
                                             <textRuns>
                                                  <DOMTextRun>
                                                       <characters>www.flashandmath.com</characters>
                                                       <textAttrs>
                                                            <DOMTextAttrs bitmapSize="240" face="ArialMT" fillColor="#99CCFF" target="_blank" url="http://www.flashandmath.com"/>
                                                       </textAttrs>
                                                  </DOMTextRun>
                                             </textRuns>
                                        </DOMStaticText>
                                        <DOMStaticText left="6.5" width="461.95" height="20.1" isSelectable="false">
                                             <matrix>
                                                  <Matrix tx="5.5" ty="11"/>
                                             </matrix>
                                             <textRuns>
                                                  <DOMTextRun>
                                                       <characters>Illustrating the PlayingCard and CardLoader classes</characters>
                                                       <textAttrs>
                                                            <DOMTextAttrs aliasText="false" size="18" face="Arial-BoldMT" fillColor="#FFFFFF"/>
                                                       </textAttrs>
                                                  </DOMTextRun>
                                             </textRuns>
                                        </DOMStaticText>
                                        <DOMSymbolInstance libraryItemName="ButtonUp" name="btnPull" centerPoint3DX="470.45" centerPoint3DY="410.5">
                                             <matrix>
                                                  <Matrix tx="470.45" ty="410.5"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point/>
                                             </transformationPoint>
                                        </DOMSymbolInstance>
                                        <DOMSymbolInstance libraryItemName="ButtonReset" name="btnRepeat" centerPoint3DX="481.3" centerPoint3DY="389.35">
                                             <matrix>
                                                  <Matrix tx="481.3" ty="389.35"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point/>
                                             </transformationPoint>
                                        </DOMSymbolInstance>
                                        <DOMStaticText width="508.95" height="56.1" isSelectable="false">
                                             <matrix>
                                                  <Matrix tx="17" ty="40.25"/>
                                             </matrix>
                                             <textRuns>
                                                  <DOMTextRun>
                                                       <characters>The "Deal 5" button initializes the dealing of five cards faceup from the shuffled pack. The "Shuffle" button returns the five cards to the deck and shuffles again, so the effect can be repeated.</characters>
                                                       <textAttrs>
                                                            <DOMTextAttrs aliasText="false" lineSpacing="1.2" size="16" face="ArialMT" fillColor="#FFFFFF"/>
                                                       </textAttrs>
                                                  </DOMTextRun>
                                             </textRuns>
                                        </DOMStaticText>
                                        <DOMDynamicText name="txtOutput" fontRenderingMode="device" width="359" height="73.65">
                                             <matrix>
                                                  <Matrix tx="84" ty="167"/>
                                             </matrix>
                                             <textRuns>
                                                  <DOMTextRun>
                                                       <characters></characters>
                                                       <textAttrs>
                                                            <DOMTextAttrs aliasText="false" size="14" bitmapSize="280" face="_sans" fillColor="#99CCFF"/>
                                                       </textAttrs>
                                                  </DOMTextRun>
                                             </textRuns>
                                        </DOMDynamicText>
                                   </elements>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
               </layers>
          </DOMTimeline>
     </timelines>
     <persistentData>
          <PD n="TestMovieChecked" v="FlashPro"/>
          <PD n="DebugMovieChecked" v="FlashPro"/>
     </persistentData>
     <PrinterSettings/>
     <publishHistory>
          <PublishItem publishSize="36743" publishTime="1362108956" publishDebug="true"/>
          <PublishItem publishSize="34941" publishTime="1362108508"/>
          <PublishItem publishSize="34943" publishTime="1362108398"/>
          <PublishItem publishSize="34941" publishTime="1362108348"/>
          <PublishItem publishSize="36744" publishTime="1362108318" publishDebug="true"/>
          <PublishItem publishSize="34940" publishTime="1362108250"/>
          <PublishItem publishSize="36719" publishTime="1362107578" publishDebug="true"/>
          <PublishItem publishSize="34915" publishTime="1362107526"/>
          <PublishItem publishSize="36718" publishTime="1362107306" publishDebug="true"/>
          <PublishItem publishSize="34919" publishTime="1362107294"/>
          <PublishItem publishSize="36719" publishTime="1362107264" publishDebug="true"/>
          <PublishItem publishSize="34918" publishTime="1362107258"/>
          <PublishItem publishSize="34918" publishTime="1362107148"/>
          <PublishItem publishSize="36651" publishTime="1362106332" publishDebug="true"/>
          <PublishItem publishSize="36651" publishTime="1362106228" publishDebug="true"/>
          <PublishItem publishSize="34834" publishTime="1362106158"/>
          <PublishItem publishSize="34834" publishTime="1362106002"/>
          <PublishItem publishSize="13452" publishTime="1362105968"/>
          <PublishItem publishSize="13454" publishTime="1362105932"/>
          <PublishItem publishSize="13455" publishTime="1362105878"/>
     </publishHistory>
     <swcCache>
          <Swc hashKey="om7c9yCgvfkNSdG1wdk370" href="zip6aiykly.swc">
               <classDefinitions>
                    <ClassDefinition value="fl.controls.TextArea"/>
                    <ClassDefinition value="fl.controls.BaseButton"/>
                    <ClassDefinition value="fl.controls.ProgressBar"/>
                    <ClassDefinition value="fl.controls.ButtonLabelPlacement"/>
                    <ClassDefinition value="fl.controls.listClasses.CellRenderer"/>
                    <ClassDefinition value="fl.data.SimpleCollectionItem"/>
                    <ClassDefinition value="fl.events.ColorPickerEvent"/>
                    <ClassDefinition value="fl.controls.Button"/>
                    <ClassDefinition value="fl.controls.CheckBox"/>
                    <ClassDefinition value="fl.controls.ColorPicker"/>
                    <ClassDefinition value="fl.controls.listClasses.ListData"/>
                    <ClassDefinition value="fl.events.DataGridEventReason"/>
                    <ClassDefinition value="fl.data.TileListCollectionItem"/>
                    <ClassDefinition value="fl.controls.Slider"/>
                    <ClassDefinition value="fl.accessibility.ListAccImpl"/>
                    <ClassDefinition value="fl.controls.TextInput"/>
                    <ClassDefinition value="fl.controls.UIScrollBar"/>
                    <ClassDefinition value="fl.controls.listClasses.ImageCell"/>
                    <ClassDefinition value="fl.core.UIComponent"/>
                    <ClassDefinition value="fl.controls.NumericStepper"/>
                    <ClassDefinition value="fl.controls.progressBarClasses.IndeterminateBar"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.DataGridColumn"/>
                    <ClassDefinition value="fl.events.DataChangeType"/>
                    <ClassDefinition value="fl.events.ComponentEvent"/>
                    <ClassDefinition value="fl.livepreview.LivePreviewParent"/>
                    <ClassDefinition value="fl.accessibility.AccImpl"/>
                    <ClassDefinition value="fl.controls.ProgressBarDirection"/>
                    <ClassDefinition value="fl.core.ComponentShim"/>
                    <ClassDefinition value="fl.managers.IFocusManagerGroup"/>
                    <ClassDefinition value="fl.controls.listClasses.TileListData"/>
                    <ClassDefinition value="fl.controls.ScrollPolicy"/>
                    <ClassDefinition value="fl.controls.SelectableList"/>
                    <ClassDefinition value="fl.controls.ProgressBarMode"/>
                    <ClassDefinition value="fl.accessibility.DataGridAccImpl"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.DataGridCellEditor"/>
                    <ClassDefinition value="fl.accessibility.CheckBoxAccImpl"/>
                    <ClassDefinition value="fl.accessibility.LabelButtonAccImpl"/>
                    <ClassDefinition value="fl.containers.UILoader"/>
                    <ClassDefinition value="fl.controls.TileList"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.HeaderRenderer"/>
                    <ClassDefinition value="fl.events.DataGridEvent"/>
                    <ClassDefinition value="fl.controls.SliderDirection"/>
                    <ClassDefinition value="fl.data.DataProvider"/>
                    <ClassDefinition value="fl.controls.List"/>
                    <ClassDefinition value="fl.controls.ScrollBar"/>
                    <ClassDefinition value="fl.containers.ScrollPane"/>
                    <ClassDefinition value="fl.events.SliderEvent"/>
                    <ClassDefinition value="fl.controls.Label"/>
                    <ClassDefinition value="fl.managers.FocusManager"/>
                    <ClassDefinition value="fl.accessibility.ComboBoxAccImpl"/>
                    <ClassDefinition value="fl.controls.RadioButton"/>
                    <ClassDefinition value="fl.managers.IFocusManager"/>
                    <ClassDefinition value="fl.containers.BaseScrollPane"/>
                    <ClassDefinition value="fl.events.InteractionInputType"/>
                    <ClassDefinition value="fl.managers.StyleManager"/>
                    <ClassDefinition value="fl.controls.ScrollBarDirection"/>
                    <ClassDefinition value="fl.accessibility.SelectableListAccImpl"/>
                    <ClassDefinition value="fl.events.SliderEventClickTarget"/>
                    <ClassDefinition value="fl.accessibility.ButtonAccImpl"/>
                    <ClassDefinition value="fl.controls.ComboBox"/>
                    <ClassDefinition value="fl.managers.IFocusManagerComponent"/>
                    <ClassDefinition value="fl.events.ListEvent"/>
                    <ClassDefinition value="fl.controls.DataGrid"/>
                    <ClassDefinition value="fl.controls.listClasses.ICellRenderer"/>
                    <ClassDefinition value="fl.accessibility.UIComponentAccImpl"/>
                    <ClassDefinition value="fl.controls.RadioButtonGroup"/>
                    <ClassDefinition value="fl.accessibility.RadioButtonAccImpl"/>
                    <ClassDefinition value="fl.accessibility.TileListAccImpl"/>
                    <ClassDefinition value="fl.controls.LabelButton"/>
                    <ClassDefinition value="fl.core.AccessibilityShim"/>
                    <ClassDefinition value="fl.events.DataChangeEvent"/>
                    <ClassDefinition value="fl.events.ScrollEvent"/>
                    <ClassDefinition value="fl.core.InvalidationType"/>
               </classDefinitions>
          </Swc>
     </swcCache>
</DOMDocument>